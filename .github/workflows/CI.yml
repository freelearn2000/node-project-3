name:  CI
  #checks for linux commands

on:
 pull_request:
    branches: [develop, master]
 push:
    branches: [develop, master]
    
env:
  NODE_VERSION: '16.x'                                             # set this to the node version to use

jobs:
  build:
    runs-on: ubuntu-latest
 
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
       node-version: ${{ env.NODE_VERSION }}
       cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Do Code Analysis
      run: echo "Do code analysis here..."

    - name: Upload Code coverage as Artifact
      # uses: actions/upload-artifact@v2
      # with:
      #   name: codeanalysis_coverage
      #   path: codecoverage
      run: echo "Upload code analysis coverage here..."

    - name: Run Tests
      run: npm run test
      id: test
      
       
    - name: Deploy Test Report to GitHub Page
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.SEMANTIC_TOKEN }}
        publish_dir: ./testreports
        publish_branch: gh-pages
        
    - name: Create Issue (If Test Fail)
      if: steps.test.outcome != 'success'
      uses: nashmaniac/create-issue-action@v1.1
      with:
        title: Automated Issue
        token: ${{ secrets.SEMANTIC_TOKEN }}
        assignees: ${{github.actor}}
        labels: test-failed
        body:  '[Test Failed Report is out.](https://freelearn2000.github.io/node-project-3/index.html)'
        
    - name: Send Error messge to  Slack
      if: always()
      id: slack
      uses: slackapi/slack-github-action@v1.18.0
      with:
        payload: |
          {
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Test result: `${{ steps.test.outcome }}`*\n *Test Report : * <https://freelearn2000.github.io/${{ github.event.repository.name }}>\n>*REPO : * ${{ github.event.repository.name }} \n>*WORKFLOW : * ${{github.workflow}} \n>*RUN URL: * <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}> \n> *GITHUB ACTOR:* ${{github.actor}}"
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK



   # - name: Upload Test coverage 
      # uses: actions/upload-artifact@v2
      # with:
      #   name: test_coverage
      #   path: testcoverage
     # run: echo "Upload test coverage here..."
        
    - name: Build project
      if: github.event_name == 'push'
      run: echo "Build the project here..."

    - name: Upload Build folder as Artifact
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v2
      with:
        name: Build
        path: build
        
    - name: Add Build Assets for Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: zip -r build.zip build


    - name: Create a Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: npx semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.SEMANTIC_TOKEN }}
        
  
